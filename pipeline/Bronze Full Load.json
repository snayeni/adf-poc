{
	"name": "Bronze Full Load",
	"properties": {
		"activities": [
			{
				"name": "WrtiteFullSqlSourceStarted",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "SourceId",
						"value": "1"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[status].[WriteFullSqlStarted]",
						"storedProcedureParameters": {
							"FullSqlSourceId": {
								"type": "Int64",
								"value": {
									"value": "@pipeline().parameters.SourceId",
									"type": "Expression"
								}
							},
							"PipelineRun": {
								"type": "Datetimeoffset",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							},
							"PipelineId": {
								"type": "Guid",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ETLManagementDataset",
						"type": "DatasetReference",
						"parameters": {
							"tablename": "a",
							"schema": "b"
						}
					}
				}
			},
			{
				"name": "sqlload",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "WrtiteFullSqlSourceStarted",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from @{activity('WrtiteFullSqlSourceStarted').output.firstRow.TableName}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ETLManagementDataset",
						"type": "DatasetReference",
						"parameters": {
							"tablename": "a",
							"schema": "b"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AdlsPocDataset",
						"type": "DatasetReference",
						"parameters": {
							"filename": {
								"value": "@activity('WrtiteFullSqlSourceStarted').output.firstRow.TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "WriteFullSqlSourceEnded",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "sqlload",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[status].[WriteEnded]",
					"storedProcedureParameters": {
						"PipelineRun": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "Datetimeoffset"
						},
						"SourceHistoryId": {
							"value": {
								"value": "@activity('WrtiteFullSqlSourceStarted').output.firstRow.SourceHistoryId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ETLManagementLinkedService",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceId": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"annotations": []
	}
}